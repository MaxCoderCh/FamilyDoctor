<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.familydoctor.doctorsubject.mapper.MemberPriceMapper">
    <resultMap id="BaseResultMap" type="com.familydoctor.doctorsubject.entity.MemberPrice">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="price" jdbcType="VARCHAR" property="price"/>
        <result column="ispay" jdbcType="CHAR" property="ispay"/>
        <result column="member_id" jdbcType="VARCHAR" property="memberId"/>
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="price_type_id" jdbcType="VARCHAR" property="priceTypeId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="create_doctor" jdbcType="VARCHAR" property="createDoctor"/>
        <result column="update_doctor" jdbcType="VARCHAR" property="updateDoctor"/>
        <result column="delete_user" jdbcType="VARCHAR" property="deleteUser"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, price, ispay, member_id, order_id, price_type_id, create_time, update_time, delete_time, 
    create_doctor, update_doctor, delete_user, del_flag
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from member_price
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <!--memberId,priceTypeId,orderIdList查询-->
    <select id="selectThreePram" parameterType="com.familydoctor.doctorsubject.bean.MemberPriceBean"
            resultMap="BaseResultMap">
        select * from member_price
        <where>
            <if test="memberId != null">
                AND member_id = #{memberId,jdbcType=VARCHAR}
            </if>
            <if test="priceTypeId != null">
                AND price_type_id = #{priceTypeId,jdbcType=VARCHAR}
            </if>
            <if test="orderIds != null">
                AND order_id in
                <foreach collection="orderIds" item="orderId" index="index" open="(" close=")" separator=",">
                    #{orderId}
                </foreach>
            </if>
        </where>
    </select>

    <!--memberIdList查询price-->
    <select id="selectPriceByMemberIdList" parameterType="java.util.List" resultType="java.lang.String">
        select price
        from member_price
        <where>
            member_id in
            <foreach collection="list" item="memberId" index="index" open="(" close=")" separator=",">
                #{memberId}
            </foreach>
        </where>
    </select>

    <!--动态查询-->
    <select id="selectTrends" parameterType="com.familydoctor.doctorsubject.bean.MemberPriceBean"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from member_price
        <where>
            AND del_flag = "0"
            AND ispay = "1"
            AND create_time &gt;=#{startDate}
            AND create_time &lt;=#{stopDate}
            <if test="price != null">
                AND price = #{price,jdbcType=VARCHAR}
            </if>
            <if test="ispay != null">
                AND ispay = #{ispay,jdbcType=CHAR}
            </if>
            <if test="memberId != null">
                AND member_id = #{memberId,jdbcType=VARCHAR}
            </if>
            <if test="orderId != null">
                AND order_id = #{orderId,jdbcType=VARCHAR}
            </if>
            <if test="priceTypeId != null">
                AND price_type_id = #{priceTypeId,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="deleteTime != null">
                AND delete_time = #{deleteTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createDoctor != null">
                AND create_doctor = #{createDoctor,jdbcType=VARCHAR}
            </if>
            <if test="updateDoctor != null">
                AND update_doctor = #{updateDoctor,jdbcType=VARCHAR}
            </if>
            <if test="deleteUser != null">
                AND delete_user = #{deleteUser,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!--动态查询-->
    <select id="selectBySelective" parameterType="com.familydoctor.doctorsubject.entity.MemberPrice"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from member_price
        <where>
            AND del_flag = "0"
            <if test="price != null">
                AND price = #{price,jdbcType=VARCHAR}
            </if>
            <if test="ispay != null">
                AND ispay = #{ispay,jdbcType=CHAR}
            </if>
            <if test="memberId != null">
                AND member_id = #{memberId,jdbcType=VARCHAR}
            </if>
            <if test="orderId != null">
                AND order_id = #{orderId,jdbcType=VARCHAR}
            </if>
            <if test="priceTypeId != null">
                AND price_type_id = #{priceTypeId,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="deleteTime != null">
                AND delete_time = #{deleteTime,jdbcType=TIMESTAMP}
            </if>
            <if test="createDoctor != null">
                AND create_doctor = #{createDoctor,jdbcType=VARCHAR}
            </if>
            <if test="updateDoctor != null">
                AND update_doctor = #{updateDoctor,jdbcType=VARCHAR}
            </if>
            <if test="deleteUser != null">
                AND delete_user = #{deleteUser,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member_price
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.familydoctor.doctorsubject.entity.MemberPrice">

        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        insert into member_price (id, price, ispay,
        member_id, order_id, price_type_id,
        create_time, update_time, delete_time,
        create_doctor, update_doctor, delete_user,
        del_flag)
        values (#{id,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{ispay,jdbcType=CHAR},
        #{memberId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{priceTypeId,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP},
        #{createDoctor,jdbcType=VARCHAR}, #{updateDoctor,jdbcType=VARCHAR}, #{deleteUser,jdbcType=VARCHAR},
        #{delFlag,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.familydoctor.doctorsubject.entity.MemberPrice">

        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        insert into member_price
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="ispay != null">
                ispay,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="priceTypeId != null">
                price_type_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
            <if test="createDoctor != null">
                create_doctor,
            </if>
            <if test="updateDoctor != null">
                update_doctor,
            </if>
            <if test="deleteUser != null">
                delete_user,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=VARCHAR},
            </if>
            <if test="ispay != null">
                #{ispay,jdbcType=CHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="priceTypeId != null">
                #{priceTypeId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDoctor != null">
                #{createDoctor,jdbcType=VARCHAR},
            </if>
            <if test="updateDoctor != null">
                #{updateDoctor,jdbcType=VARCHAR},
            </if>
            <if test="deleteUser != null">
                #{deleteUser,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.familydoctor.doctorsubject.entity.MemberPrice">
        update member_price
        <set>
            <if test="price != null">
                price = #{price,jdbcType=VARCHAR},
            </if>
            <if test="ispay != null">
                ispay = #{ispay,jdbcType=CHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="priceTypeId != null">
                price_type_id = #{priceTypeId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDoctor != null">
                create_doctor = #{createDoctor,jdbcType=VARCHAR},
            </if>
            <if test="updateDoctor != null">
                update_doctor = #{updateDoctor,jdbcType=VARCHAR},
            </if>
            <if test="deleteUser != null">
                delete_user = #{deleteUser,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.familydoctor.doctorsubject.entity.MemberPrice">
    update member_price
    set price = #{price,jdbcType=VARCHAR},
      ispay = #{ispay,jdbcType=CHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      price_type_id = #{priceTypeId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      create_doctor = #{createDoctor,jdbcType=VARCHAR},
      update_doctor = #{updateDoctor,jdbcType=VARCHAR},
      delete_user = #{deleteUser,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>