<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.familydoctor.doctorsubject.mapper.RegisteredMapper">
    <resultMap id="BaseResultMap" type="com.familydoctor.doctorsubject.entity.Registered">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="regtype" jdbcType="VARCHAR" property="regtype"/>
        <result column="member_id" jdbcType="VARCHAR" property="memberId"/>
        <result column="hospital_id" jdbcType="VARCHAR" property="hospitalId"/>
        <result column="branch_id" jdbcType="VARCHAR" property="branchId"/>
        <result column="registeredType_id" jdbcType="VARCHAR" property="registeredtypeId"/>
        <result column="registered_time" jdbcType="TIMESTAMP" property="registeredTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="create_doctor" jdbcType="VARCHAR" property="createDoctor"/>
        <result column="update_doctor" jdbcType="VARCHAR" property="updateDoctor"/>
        <result column="delete_user" jdbcType="VARCHAR" property="deleteUser"/>
        <result column="del_flag" jdbcType="CHAR" property="delFlag"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, regtype, member_id, hospital_id, branch_id, registeredType_id, registered_time, 
    create_time, update_time, delete_time, create_doctor, update_doctor, delete_user, 
    del_flag
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from registered
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <!-- 动态SQL 查询 -->
    <select resultMap="BaseResultMap" id="selectTrends"
            parameterType="com.familydoctor.doctorsubject.bean.RegisteredBean">
        select
        <include refid="Base_Column_List"/>
        from registered
        <where>
            <if test="regtype != null">
                regtype = #{regtype,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="hospitalId != null">
                hospital_id = #{hospitalId,jdbcType=VARCHAR},
            </if>
            <if test="branchId != null">
                branch_id = #{branchId,jdbcType=VARCHAR},
            </if>
            <if test="registeredtypeId != null">
                registeredType_id = #{registeredtypeId,jdbcType=VARCHAR},
            </if>
            <if test="registeredTime != null">
                registered_time = #{registeredTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDoctor != null">
                create_doctor = #{createDoctor,jdbcType=VARCHAR},
            </if>
            <if test="updateDoctor != null">
                update_doctor = #{updateDoctor,jdbcType=VARCHAR},
            </if>
            <if test="deleteUser != null">
                delete_user = #{deleteUser,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from registered
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.familydoctor.doctorsubject.entity.Registered">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        insert into registered (id, regtype, member_id,
        hospital_id, branch_id, registeredType_id,
        registered_time, create_time, update_time,
        delete_time, create_doctor, update_doctor,
        delete_user, del_flag)
        values (#{id,jdbcType=VARCHAR}, #{regtype,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR},
        #{hospitalId,jdbcType=VARCHAR}, #{branchId,jdbcType=VARCHAR}, #{registeredtypeId,jdbcType=VARCHAR},
        #{registeredTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
        #{deleteTime,jdbcType=TIMESTAMP}, #{createDoctor,jdbcType=VARCHAR}, #{updateDoctor,jdbcType=VARCHAR},
        #{deleteUser,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.familydoctor.doctorsubject.entity.Registered">
        <selectKey keyProperty="id" resultType="string" order="BEFORE">
            select replace(uuid(), '-', '') as id from dual
        </selectKey>
        insert into registered
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="regtype != null">
                regtype,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="hospitalId != null">
                hospital_id,
            </if>
            <if test="branchId != null">
                branch_id,
            </if>
            <if test="registeredtypeId != null">
                registeredType_id,
            </if>
            <if test="registeredTime != null">
                registered_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
            <if test="createDoctor != null">
                create_doctor,
            </if>
            <if test="updateDoctor != null">
                update_doctor,
            </if>
            <if test="deleteUser != null">
                delete_user,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="regtype != null">
                #{regtype,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="hospitalId != null">
                #{hospitalId,jdbcType=VARCHAR},
            </if>
            <if test="branchId != null">
                #{branchId,jdbcType=VARCHAR},
            </if>
            <if test="registeredtypeId != null">
                #{registeredtypeId,jdbcType=VARCHAR},
            </if>
            <if test="registeredTime != null">
                #{registeredTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDoctor != null">
                #{createDoctor,jdbcType=VARCHAR},
            </if>
            <if test="updateDoctor != null">
                #{updateDoctor,jdbcType=VARCHAR},
            </if>
            <if test="deleteUser != null">
                #{deleteUser,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.familydoctor.doctorsubject.entity.Registered">
        update registered
        <set>
            <if test="regtype != null">
                regtype = #{regtype,jdbcType=VARCHAR},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=VARCHAR},
            </if>
            <if test="hospitalId != null">
                hospital_id = #{hospitalId,jdbcType=VARCHAR},
            </if>
            <if test="branchId != null">
                branch_id = #{branchId,jdbcType=VARCHAR},
            </if>
            <if test="registeredtypeId != null">
                registeredType_id = #{registeredtypeId,jdbcType=VARCHAR},
            </if>
            <if test="registeredTime != null">
                registered_time = #{registeredTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createDoctor != null">
                create_doctor = #{createDoctor,jdbcType=VARCHAR},
            </if>
            <if test="updateDoctor != null">
                update_doctor = #{updateDoctor,jdbcType=VARCHAR},
            </if>
            <if test="deleteUser != null">
                delete_user = #{deleteUser,jdbcType=VARCHAR},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.familydoctor.doctorsubject.entity.Registered">
    update registered
    set regtype = #{regtype,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      hospital_id = #{hospitalId,jdbcType=VARCHAR},
      branch_id = #{branchId,jdbcType=VARCHAR},
      registeredType_id = #{registeredtypeId,jdbcType=VARCHAR},
      registered_time = #{registeredTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      create_doctor = #{createDoctor,jdbcType=VARCHAR},
      update_doctor = #{updateDoctor,jdbcType=VARCHAR},
      delete_user = #{deleteUser,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>